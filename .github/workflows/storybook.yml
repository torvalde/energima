name: Storybook

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: yarn run build
      - name: Visual test
        run: yarn run test-ci
      - name: Upload visual failures
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: loki
          path: .loki/difference
        env:
          CI: true
      - name: Deploy storybook
        env:
          GH_TOKEN: torvalde:${{secrets.GITHUB_TOKEN}}
        run: yarn run deploy-storybook -- --ci